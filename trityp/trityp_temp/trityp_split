digraph clustertrityp_split {
	graph [label=trityp_split]
	1 [label="def trityp(i, j, k):...
"]
	subgraph clustertrityp {
		graph [label=trityp]
		3 [label="c[22] += 1
if i == 0 or j == 0 or k == 0:
"]
		4 [label="c[5] += 1
type_code = display_type_code(3)
"]
		5 [label="return type_code
"]
		4 -> 5 [label=""]
		3 -> 4 [label="i == 0 or j == 0 or k == 0"]
		6 [label="c[6] += 1
type_code = 0
if i == j:
"]
		7 [label="c[7] += 1
type_code = is_side_one_equal_two(type_code)
"]
		8 [label="if i == k:
"]
		9 [label="c[8] += 1
type_code = is_side_one_equal_three(type_code)
"]
		10 [label="if j == k:
"]
		11 [label="c[9] += 1
type_code = is_side_two_equal_three(type_code)
"]
		12 [label="if type_code == 0:
"]
		13 [label="c[10] += 1
if i + j <= k or j + k <= i or i + k <= j:
"]
		28 [label="c[11] += 1
type_code = display_type_code(4)
"]
		28 -> 5 [label=""]
		13 -> 28 [label="i + j <= k or j + k <= i or i + k <= j"]
		30 [label="c[12] += 1
type_code = display_type_code(1)
"]
		30 -> 5 [label=""]
		13 -> 30 [label="(not (i + j <= k or j + k <= i or i + k <= j))"]
		12 -> 13 [label="type_code == 0"]
		15 [label="if type_code > 3:
"]
		16 [label="c[13] += 1
type_code = display_type_code(3)
"]
		16 -> 5 [label=""]
		15 -> 16 [label="type_code > 3"]
		18 [label="if type_code == 1 and i + j > k:
"]
		19 [label="c[14] += 1
type_code = display_type_code(2)
"]
		19 -> 5 [label=""]
		18 -> 19 [label="type_code == 1 and i + j > k"]
		21 [label="if type_code == 2 and i + k > j:
"]
		22 [label="c[15] += 1
type_code = display_type_code(2)
"]
		22 -> 5 [label=""]
		21 -> 22 [label="type_code == 2 and i + k > j"]
		24 [label="if type_code == 3 and j + k > i:
"]
		25 [label="c[16] += 1
type_code = display_type_code(2)
"]
		25 -> 5 [label=""]
		24 -> 25 [label="type_code == 3 and j + k > i"]
		27 [label="c[17] += 1
type_code = display_type_code(4)
"]
		27 -> 5 [label=""]
		24 -> 27 [label="(not (type_code == 3 and j + k > i))"]
		21 -> 24 [label="(not (type_code == 2 and i + k > j))"]
		18 -> 21 [label="(not (type_code == 1 and i + j > k))"]
		15 -> 18 [label="(type_code <= 3)"]
		12 -> 15 [label="(type_code != 0)"]
		11 -> 12 [label=""]
		10 -> 11 [label="j == k"]
		10 -> 12 [label="(j != k)"]
		9 -> 10 [label=""]
		8 -> 9 [label="i == k"]
		8 -> 10 [label="(i != k)"]
		7 -> 8 [label=""]
		6 -> 7 [label="i == j"]
		6 -> 8 [label="(i != j)"]
		3 -> 6 [label="(not (i == 0 or j == 0 or k == 0))"]
	}
}
