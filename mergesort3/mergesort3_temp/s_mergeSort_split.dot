digraph clustermergeSort {
	graph [bb="0,0,3076.5,800",
		label=mergeSort,
		lheight=0.21,
		lp="1538.3,11.5",
		lwidth=0.81
	];
	node [label="\N"];
	1	[height=0.5,
		label="c[18] += 1n = len(arr)current_size = 1",
		pos="1950.5,782",
		width=4.1344];
	2	[height=0.5,
		label="while current_size < n:",
		pos="1950.5,709",
		width=2.5637];
	1 -> 2	[pos="e,1950.5,727.03 1950.5,763.81 1950.5,755.79 1950.5,746.05 1950.5,737.07"];
	3	[height=0.5,
		label="c[1] += 1if n % 2 == 0:",
		pos="1950.5,622",
		width=2.672];
	2 -> 3	[label="current_size < n",
		lp="1996,665.5",
		pos="e,1950.5,640.18 1950.5,690.8 1950.5,679.16 1950.5,663.55 1950.5,650.24"];
	5	[height=0.5,
		label="c[2] += 1",
		pos="2287.5,535",
		width=1.2638];
	3 -> 5	[label="n % 2 == 0",
		lp="2170.5,578.5",
		pos="e,2249.9,545.49 2005.4,607.15 2070.6,590.71 2178.3,563.56 2240,547.98"];
	7	[height=0.5,
		label="c[9] += 1",
		pos="1614.5,535",
		width=1.2638];
	3 -> 7	[label="(n % 2 != 0)",
		lp="1837.5,578.5",
		pos="e,1652,545.49 1895.8,607.15 1830.8,590.71 1723.5,563.56 1661.9,547.98"];
	21	[height=0.5,
		label="for left in range(0, n, 2 * current_size):",
		pos="2640.5,462",
		width=4.1524];
	5 -> 21	[pos="e,2567.1,477.76 2327.3,525.99 2382.8,514.84 2484.6,494.36 2557.1,479.78"];
	22	[height=0.5,
		label="c[3] += 1mid = min(left + current_size - 1, n - 1)right = min(left + 2 * current_size - 1, n - 1)left_subarray = arr[left:mid + \
1]right_subarray = arr[mid + 1:right + 1]i = 0j = 0k = left",
		pos="2213.5,375",
		width=18.271];
	21 -> 22	[label="range(0, n, 2 * current_size)",
		lp="2531,418.5",
		pos="e,2298.2,392.86 2566.6,446.29 2495,432.03 2386,410.33 2308.1,394.82"];
	23	[height=0.5,
		label="current_size *= 2",
		pos="3000.5,375",
		width=2.0401];
	21 -> 23	[pos="e,2978.1,392.22 2775.9,454.26 2820.5,449.25 2869.9,440.67 2913.5,426 2933.3,419.34 2953.6,407.97 2969.7,397.74"];
	24	[height=0.5,
		label="while i < len(left_subarray) and j < len(right_subarray):",
		pos="2245.5,302",
		width=5.7773];
	22 -> 24	[pos="e,2237.9,320.03 2221.3,356.81 2225,348.53 2229.6,338.41 2233.7,329.19"];
	25	[height=0.5,
		label="c[4] += 1if left_subarray[i] <= right_subarray[j]:",
		pos="1968.5,215",
		width=5.1454];
	24 -> 25	[label="i < len(left_subarray) and j < len(right_subarray)",
		lp="2103.5,258.5",
		pos="e,1963.7,233.35 2091.5,289.9 2033.3,284.12 1978.6,276.12 1969.5,266 1964.1,259.92 1962.5,251.54 1962.7,243.38"];
	26	[height=0.5,
		label="while i < len(left_subarray):",
		pos="2541.5,215",
		width=3.0331];
	24 -> 26	[label="(not (i < len(left_subarray) and j < len(right_subarray)))",
		lp="2564.5,258.5",
		pos="e,2489.6,230.92 2302.6,284.61 2353.4,270.02 2427.6,248.72 2479.8,233.73"];
	27	[height=0.5,
		label="c[5] += 1arr[k] = left_subarray[i]i += 1",
		pos="2070.5,128",
		width=4.2427];
	25 -> 27	[label="left_subarray[i] <= right_subarray[j]",
		lp="2126.5,171.5",
		pos="e,2050.3,145.89 1989.2,196.8 2004.5,184.04 2025.5,166.5 2042.4,152.46"];
	29	[height=0.5,
		label="c[6] += 1arr[k] = right_subarray[j]j += 1",
		pos="1742.5,128",
		width=4.3691];
	25 -> 29	[label="(left_subarray[i] > right_subarray[j])",
		lp="1907.5,171.5",
		pos="e,1759.8,146.06 1868.6,199.78 1847.5,194.76 1825.8,188.03 1806.5,179 1792.5,172.41 1778.6,162.22 1767.5,152.76"];
	28	[height=0.5,
		label="k += 1",
		pos="2070.5,41",
		width=0.97491];
	27 -> 28	[pos="e,2070.5,59.175 2070.5,109.8 2070.5,98.163 2070.5,82.548 2070.5,69.237"];
	28 -> 24	[pos="e,2249.8,284 2104.6,45.86 2142.6,52.153 2202.8,68.438 2232.5,110 2267.5,158.91 2259.5,234.08 2251.9,273.97"];
	29 -> 28	[pos="e,2040,49.921 1803.1,111.31 1869.3,94.16 1973.4,67.164 2030.3,52.436"];
	30	[height=0.5,
		label="c[7] += 1arr[k] = left_subarray[i]i += 1k += 1",
		pos="2542.5,128",
		width=4.9107];
	26 -> 30	[label="i < len(left_subarray)",
		lp="2600,171.5",
		pos="e,2542.3,146.18 2541.7,196.8 2541.9,185.16 2542.1,169.55 2542.2,156.24"];
	31	[height=0.5,
		label="while j < len(right_subarray):",
		pos="2894.5,128",
		width=3.1775];
	26 -> 31	[label="(i >= len(left_subarray))",
		lp="2805.5,171.5",
		pos="e,2834.7,143.42 2600.6,199.77 2662.4,184.89 2759.3,161.55 2824.8,145.78"];
	30 -> 26	[pos="e,2540.1,196.87 2540.8,146.07 2540.3,151.77 2539.8,158.15 2539.5,164 2539.2,171.35 2539.3,179.3 2539.6,186.66"];
	31 -> 21	[label="(j >= len(right_subarray))",
		lp="2970.5,302",
		pos="e,2734.8,447.99 2896.1,146.24 2897.6,163.4 2899.5,190.5 2899.5,214 2899.5,376 2899.5,376 2899.5,376 2899.5,410.24 2816.8,432.93 \
2744.8,446.18"];
	32	[height=0.5,
		label="c[8] += 1arr[k] = right_subarray[j]j += 1k += 1",
		pos="2894.5,41",
		width=5.0551];
	31 -> 32	[label="j < len(right_subarray)",
		lp="2883.5,84.5",
		pos="e,2841.6,58.285 2843.6,111.81 2834.8,106.9 2826.8,100.44 2821.5,92 2814.2,80.381 2820.9,70.781 2832.7,63.206"];
	32 -> 31	[pos="e,2931.4,110.8 2932.4,58.732 2946.1,67.382 2956.7,78.878 2949.5,92 2947,96.655 2943.5,100.78 2939.6,104.41"];
	23 -> 2	[pos="e,2041.2,705.27 2996.3,393.14 2992.5,410.22 2987.5,437.26 2987.5,461 2987.5,623 2987.5,623 2987.5,623 2987.5,669.65 2312,696.37 \
2051.4,704.94"];
	8	[height=0.5,
		label="for left in range(0, n, 2 * current_size):",
		pos="345.53,462",
		width=4.1524];
	7 -> 8	[pos="e,477.95,470.41 1569.7,531.49 1397.4,521.85 772.74,486.9 488.33,470.99"];
	9	[height=0.5,
		label="c[10] += 1mid = min(left + current_size - 1, n - 1)right = min(left + 2 * current_size - 1, n - 1)left_subarray = arr[left:mid + \
1]right_subarray = arr[mid + 1:right + 1]i = 0j = 0k = left",
		pos="875.53,375",
		width=18.397];
	8 -> 9	[label="range(0, n, 2 * current_size)",
		lp="720.03,418.5",
		pos="e,770.77,392.8 431.28,447.25 520.78,432.89 661.65,410.3 760.71,394.41"];
	10	[height=0.5,
		label="current_size *= 2",
		pos="84.533,375",
		width=2.0401];
	8 -> 10	[pos="e,107.87,392.2 251.87,447.91 225.4,442.67 196.91,435.55 171.53,426 152.45,418.82 132.64,407.75 116.74,397.86"];
	11	[height=0.5,
		label="while i < len(left_subarray) and j < len(right_subarray):",
		pos="875.53,302",
		width=5.7773];
	9 -> 11	[pos="e,875.53,320.03 875.53,356.81 875.53,348.79 875.53,339.05 875.53,330.07"];
	12	[height=0.5,
		label="c[11] += 1if left_subarray[i] <= right_subarray[j]:",
		pos="875.53,215",
		width=5.2718];
	11 -> 12	[label="i < len(left_subarray) and j < len(right_subarray)",
		lp="1009.5,258.5",
		pos="e,875.53,233.18 875.53,283.8 875.53,272.16 875.53,256.55 875.53,243.24"];
	13	[height=0.5,
		label="while i < len(left_subarray):",
		pos="499.53,215",
		width=3.0331];
	11 -> 13	[label="(not (i < len(left_subarray) and j < len(right_subarray)))",
		lp="717.53,258.5",
		pos="e,515.79,232.9 712.68,290.77 651.96,285.27 591.1,277.25 563.53,266 548.83,260 534.67,249.6 523.43,239.83"];
	14	[height=0.5,
		label="c[12] += 1arr[k] = left_subarray[i]i += 2",
		pos="1197.5,128",
		width=4.3691];
	12 -> 14	[label="left_subarray[i] <= right_subarray[j]",
		lp="1216.5,171.5",
		pos="e,1162.4,145.59 979.77,199.95 1010.6,194.64 1044.2,187.73 1074.5,179 1101.3,171.3 1130.2,159.73 1153.3,149.65"];
	16	[height=0.5,
		label="c[13] += 1arr[k] = right_subarray[j]j += 1",
		pos="860.53,128",
		width=4.4954];
	12 -> 16	[label="(left_subarray[i] > right_subarray[j])",
		lp="969.53,171.5",
		pos="e,863.56,146.18 872.5,196.8 870.44,185.16 867.69,169.55 865.34,156.24"];
	15	[height=0.5,
		label="k += 1",
		pos="1197.5,41",
		width=0.97491];
	14 -> 15	[pos="e,1197.5,59.175 1197.5,109.8 1197.5,98.163 1197.5,82.548 1197.5,69.237"];
	15 -> 11	[pos="e,1031.4,290.06 1230.6,47.585 1286.7,58.747 1391.8,87.885 1363.5,146 1315.5,244.77 1252.6,233.99 1147.5,266 1113.8,276.28 1076.8,\
283.54 1041.3,288.66"];
	16 -> 15	[pos="e,1166.6,49.81 922.74,111.31 990.91,94.115 1098.3,67.022 1156.6,52.32"];
	17	[height=0.5,
		label="c[14] += 1arr[k] = left_subarray[i]i += 1k += 1",
		pos="499.53,128",
		width=5.0371];
	13 -> 17	[label="i < len(left_subarray)",
		lp="558.03,171.5",
		pos="e,499.53,146.18 499.53,196.8 499.53,185.16 499.53,169.55 499.53,156.24"];
	18	[height=0.5,
		label="while j < len(right_subarray):",
		pos="185.53,128",
		width=3.1775];
	13 -> 18	[label="(i >= len(left_subarray))",
		lp="424.53,171.5",
		pos="e,235.81,144.21 439.98,199.9 414.52,193.72 384.51,186.24 357.53,179 320.24,168.99 278.67,156.93 245.73,147.16"];
	17 -> 13	[pos="e,497.78,196.93 497.64,146.12 496.78,155.77 496.07,168.05 496.53,179 496.64,181.56 496.8,184.22 496.98,186.88"];
	18 -> 8	[label="(j >= len(right_subarray))",
		lp="256.53,302",
		pos="e,260.38,447.2 185.53,146.26 185.53,163.43 185.53,190.54 185.53,214 185.53,376 185.53,376 185.53,376 185.53,411.22 216.14,431.89 \
250.59,444"];
	19	[height=0.5,
		label="c[15] += 1arr[k] = right_subarray[j]j += 1k += 1",
		pos="186.53,41",
		width=5.1815];
	18 -> 19	[label="j < len(right_subarray)",
		lp="247.53,84.5",
		pos="e,186.33,59.175 185.74,109.8 185.87,98.163 186.06,82.548 186.21,69.237"];
	19 -> 18	[pos="e,184.15,109.87 184.78,59.071 184.27,64.766 183.78,71.151 183.53,77 183.22,84.348 183.33,92.304 183.62,99.662"];
	10 -> 2	[pos="e,1859.3,706.23 88.718,393.14 92.519,410.22 97.533,437.26 97.533,461 97.533,623 97.533,623 97.533,623 97.533,667.22 1462,698.14 \
1849.2,706.02"];
}
