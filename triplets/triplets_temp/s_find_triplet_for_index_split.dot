digraph clusterfind_triplet_for_index {
	graph [bb="0,0,652.72,785.94",
		label=find_triplet_for_index,
		lheight=0.22,
		lp="326.36,11.875",
		lwidth=1.70
	];
	node [label="\N"];
	1	[height=0.77585,
		label="c[15] += 1
l, r = i + 1, len(nums) - 1
",
		pos="544.36,758.01",
		width=3.0101];
	2	[height=0.5,
		label="while l < r:
",
		pos="544.36,675.08",
		width=1.3769];
	1 -> 2	[pos="e,544.36,693.55 544.36,729.61 544.36,721.69 544.36,713.03 544.36,705.02"];
	3	[height=1.0852,
		label="c[6] += 1
s = nums[i] + nums[l] + nums[r]
if s > 0:
",
		pos="358.36,566.26",
		width=3.8645];
	2 -> 3	[label="l < r",
		lp="490.98,631.21",
		pos="e,418.73,601.93 518.88,659.45 495.62,646.09 460.13,625.71 428.43,607.5"];
	5	[height=0.77585,
		label="c[7] += 1
r -= 1
",
		pos="475.36,447.52",
		width=1.3602];
	3 -> 5	[label="s > 0",
		lp="441.61,501.32",
		pos="e,451.47,472.35 395.38,528.32 410.85,512.88 428.66,495.11 443.54,480.27"];
	7	[height=0.5,
		label="if s < 0:
",
		pos="358.36,447.52",
		width=1.0858];
	3 -> 7	[label="(s <= 0)",
		lp="381.23,501.32",
		pos="e,358.36,465.81 358.36,526.71 358.36,510.47 358.36,491.89 358.36,476.93"];
	5 -> 2	[pos="e,540.58,656.7 486.8,475.17 493.04,490.27 500.64,509.6 506.36,527.2 519.52,567.71 531.22,615.65 538.05,645.47"];
	8	[height=0.77585,
		label="c[8] += 1
l += 1
",
		pos="544.36,339.9",
		width=1.3602];
	7 -> 8	[label="s < 0",
		lp="477.61,393.71",
		pos="e,510.09,360.36 382.29,432.92 411.98,416.07 463.17,387 500.09,366.04"];
	10	[height=0.77585,
		label="c[9] += 1
result.append((nums[i], nums[l], nums[r]))
",
		pos="299.36,339.9",
		width=4.9399];
	7 -> 10	[label="(s >= 0)",
		lp="356.23,393.71",
		pos="e,314.47,367.96 349.14,430.01 341.32,416.01 329.81,395.42 319.83,377.55"];
	8 -> 2	[pos="e,547.34,656.69 545,368.17 546.15,418.55 548.53,529.67 549.36,623.33 549.42,630.33 549.85,632.1 549.36,639.08 549.21,641.15 549.01,\
643.28 548.79,645.42"];
	11	[height=0.5,
		label="while l < r and nums[l] == nums[l + 1]:
",
		pos="368.36,256.97",
		width=4.3015];
	10 -> 11	[pos="e,353.71,275.15 322.33,311.95 330.09,302.85 338.74,292.71 346.42,283.71"];
	12	[height=0.77585,
		label="c[10] += 1
l += 1
",
		pos="401.36,159.29",
		width=1.4928];
	11 -> 12	[label="l < r and nums[l] == nums[l + 1]",
		lp="492.11,213.1",
		pos="e,402.48,187.65 385.44,238.76 389.73,233.46 393.83,227.34 396.36,220.97 399.07,214.14 400.68,206.54 401.59,199.09"];
	13	[height=0.5,
		label="while l < r and nums[r] == nums[r - 1]:
",
		pos="154.36,159.29",
		width=4.2877];
	11 -> 13	[label="(not (l < r and nums[l] == nums[l + 1]))",
		lp="266.98,213.1",
		pos="e,149.49,177.58 234.82,247.54 199.34,242.42 167.66,234.19 156.11,220.97 148.54,212.31 147.11,200.01 147.95,188.75"];
	12 -> 11	[pos="e,374.26,238.87 392.14,187 387.71,199.85 382.41,215.23 377.93,228.21"];
	14	[height=0.77585,
		label="c[11] += 1
r -= 1
",
		pos="145.36,51.681",
		width=1.4928];
	13 -> 14	[label="l < r and nums[r] == nums[r - 1]",
		lp="241.73,105.49",
		pos="e,147.69,80.071 152.87,140.85 151.73,127.43 150.1,108.36 148.65,91.391"];
	15	[height=0.77585,
		label="l += 1
r -= 1
",
		pos="499.36,51.681",
		width=0.97718];
	13 -> 15	[label="(not (l < r and nums[r] == nums[r - 1]))",
		lp="492.61,105.49",
		pos="e,468.47,65.384 224.88,142.87 258.83,134.94 299.97,124.59 336.36,113.36 378.35,100.41 425.28,82.568 457.96,69.587"];
	14 -> 13	[pos="e,148.61,141.01 141.93,79.951 141.16,90.431 140.93,102.49 142.36,113.36 143.08,118.88 144.28,124.67 145.65,130.21"];
	15 -> 2	[pos="e,565.4,658.51 533.81,58.731 557.52,64.67 587.95,76.103 606.36,97.611 624.42,118.72 621.36,130.51 621.36,158.29 621.36,567.26 621.36,\
567.26 621.36,567.26 621.36,601.02 595.74,631.37 574.06,651.02"];
}
